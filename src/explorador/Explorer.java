package explorador;

/**
 *
 * @author Mauro Federico Lopez
 * para las imagenes ver
 * http://netbeans.org/kb/docs/java/gui-image-display.html
 */

public class Explorer extends javax.swing.JFrame {

    private Controlador controlador;

    /**
     * Creates new form explorer
     */
    public Explorer() {
        initComponents();
        jlLista.setModel(new ListaModel());
        controlador = new Controlador(this);
        jlLista.getSelectionModel().addListSelectionListener(new ListaListener(getJlLista()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbMostrarImagen = new javax.swing.JButton();
        jpDisplay = new javax.swing.JPanel();
        jlDisplay = new javax.swing.JLabel();
        jpLista = new javax.swing.JPanel();
        jsp = new javax.swing.JScrollPane();
        jlLista = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbMostrarImagen.setText("Mostrar Imagen");
        jbMostrarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbMostrarImagenActionPerformed(evt);
            }
        });

        jlDisplay.setBackground(new java.awt.Color(255, 0, 51));
        jlDisplay.setForeground(new java.awt.Color(255, 255, 255));

        org.jdesktop.layout.GroupLayout jpDisplayLayout = new org.jdesktop.layout.GroupLayout(jpDisplay);
        jpDisplay.setLayout(jpDisplayLayout);
        jpDisplayLayout.setHorizontalGroup(
            jpDisplayLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .add(jlDisplay, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpDisplayLayout.setVerticalGroup(
            jpDisplayLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .add(jlDisplay, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jlLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlLista.setToolTipText("");
        jsp.setViewportView(jlLista);

        org.jdesktop.layout.GroupLayout jpListaLayout = new org.jdesktop.layout.GroupLayout(jpLista);
        jpLista.setLayout(jpListaLayout);
        jpListaLayout.setHorizontalGroup(
            jpListaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpListaLayout.createSequentialGroup()
                .addContainerGap()
                .add(jsp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpListaLayout.setVerticalGroup(
            jpListaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jpListaLayout.createSequentialGroup()
                .addContainerGap()
                .add(jsp, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jpDisplay, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jpLista, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jbMostrarImagen)
                        .add(85, 85, 85))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jpLista, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jpDisplay, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jbMostrarImagen)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbMostrarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbMostrarImagenActionPerformed
        getControlador().mostrarImagen();
    }//GEN-LAST:event_jbMostrarImagenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Explorer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new Explorer().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbMostrarImagen;
    private javax.swing.JLabel jlDisplay;
    private javax.swing.JList jlLista;
    private javax.swing.JPanel jpDisplay;
    private javax.swing.JPanel jpLista;
    private javax.swing.JScrollPane jsp;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the controlador
     */
    public Controlador getControlador() {
        return controlador;
    }

    /**
     * @param controlador the controlador to set
     */
    public void setControlador(Controlador controlador) {
        this.controlador = controlador;
    }

    /**
     * @return the jbMostrarImagen
     */
    public javax.swing.JButton getJbMostrarImagen() {
        return jbMostrarImagen;
    }

    /**
     * @param jbMostrarImagen the jbMostrarImagen to set
     */
    public void setJbMostrarImagen(javax.swing.JButton jbMostrarImagen) {
        this.jbMostrarImagen = jbMostrarImagen;
    }

    /**
     * @return the jlDisplay
     */
    public javax.swing.JLabel getJlDisplay() {
        return jlDisplay;
    }

    /**
     * @param jlDisplay the jlDisplay to set
     */
    public void setJlDisplay(javax.swing.JLabel jlDisplay) {
        this.jlDisplay = jlDisplay;
    }

    /**
     * @return the jlLista
     */
    public javax.swing.JList getJlLista() {
        return jlLista;
    }

    /**
     * @param jlLista the jlLista to set
     */
    public void setJlLista(javax.swing.JList jlLista) {
        this.jlLista = jlLista;
    }
}
